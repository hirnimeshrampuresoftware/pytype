name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: ['3.6','3.7','3.8', '3.9']
        experimental: [false]
        include:
          - os: ubuntu-20.04
            python-version: '3.10-dev'
            experimental: true
    steps:
    - name: Cancel previous
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system packages
      run: |
        sudo apt-get install g++
        sudo apt-get install cmake
        sudo apt-get install bison
        sudo apt-get install flex
        sudo apt-get install python3.7

    - name: Install Dependencies
      run: pip install -r requirements.txt

    - name: Run Tests
      if: matrix.python-version != '3.10-dev'
      run: python build_scripts/ci_script.py

    - name: Run Tests for python 3.10
      if: matrix.python-version == '3.10-dev'
      run: python build_scripts/ci_script.py || exit 0

  test-aarch64:
    name: "build (aarch64-${{ matrix.pyver }})"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-20.04
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
        #git submodule init
        #git submodule update
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install dependencies and test
      run: |
            docker run --rm -v ${{ github.workspace }}:/io:rw --workdir=/io \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            pip install ffpyplayer && \
            yum -y install gcc-c++ cmake bison flex python3-devel && \
            python --version && \
            python -m pip install -r requirements.txt && \
            python build_scripts/ci_script.py && \
            deavtivate'
